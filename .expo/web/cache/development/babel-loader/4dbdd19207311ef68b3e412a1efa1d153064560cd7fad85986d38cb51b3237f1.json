{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CircularGraph from \"./CircularGraph\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AttendanceScreen = function AttendanceScreen() {\n  var _useState = useState([{\n      name: 'Student 1',\n      studentNumber: '12345',\n      isPresent: false\n    }, {\n      name: 'Student 2',\n      studentNumber: '67890',\n      isPresent: false\n    }, {\n      name: 'Student 3',\n      studentNumber: '54321',\n      isPresent: false\n    }, {\n      name: 'Student 4',\n      studentNumber: '98765',\n      isPresent: false\n    }, {\n      name: 'Student 5',\n      studentNumber: '13579',\n      isPresent: false\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    students1 = _useState2[0],\n    setStudents1 = _useState2[1];\n  var _useState3 = useState([{\n      name: 'Another Student 1',\n      studentNumber: '54321',\n      isPresent: false\n    }, {\n      name: 'Another Student 2',\n      studentNumber: '98765',\n      isPresent: false\n    }, {\n      name: 'Another Student 3',\n      studentNumber: '13579',\n      isPresent: false\n    }]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    students2 = _useState4[0],\n    setStudents2 = _useState4[1];\n  var markAttendance = function markAttendance(index, studentList, setStudentList) {\n    var updatedStudents = _toConsumableArray(studentList);\n    updatedStudents[index].isPresent = !updatedStudents[index].isPresent;\n    setStudentList(updatedStudents);\n  };\n  var calculateAttendancePercentage = function calculateAttendancePercentage(studentList) {\n    var totalStudents = studentList.length;\n    var presentStudents = studentList.filter(function (student) {\n      return student.isPresent;\n    }).length;\n    return presentStudents / totalStudents * 100;\n  };\n  return _jsxs(ScrollView, {\n    style: {\n      flex: 1\n    },\n    children: [_jsxs(View, {\n      style: {\n        backgroundColor: '#fff'\n      },\n      children: [_jsx(Text, {\n        style: {\n          textAlign: 'center',\n          fontSize: 20,\n          fontWeight: 'bold',\n          marginVertical: 10\n        },\n        children: \"FA1-BSIT03-WEBDEV2\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          padding: 10,\n          backgroundColor: '#eee'\n        },\n        children: [_jsx(View, {\n          style: {\n            flex: 2\n          },\n          children: _jsx(Text, {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: \"Name\"\n          })\n        }), _jsx(View, {\n          style: {\n            flex: 1\n          },\n          children: _jsx(Text, {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: \"ID Number\"\n          })\n        }), _jsx(View, {\n          style: {\n            flex: 1\n          },\n          children: _jsx(Text, {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: \"Attendance\"\n          })\n        })]\n      }), _jsx(FlatList, {\n        data: students1,\n        renderItem: function (_renderItem) {\n          function renderItem(_x) {\n            return _renderItem.apply(this, arguments);\n          }\n          renderItem.toString = function () {\n            return _renderItem.toString();\n          };\n          return renderItem;\n        }(function (_ref) {\n          var item = _ref.item,\n            index = _ref.index;\n          return renderItem({\n            item: item,\n            index: index,\n            studentList: students1,\n            setStudentList: setStudents1\n          });\n        }),\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        }\n      }), _jsxs(View, {\n        style: {\n          alignItems: 'center'\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \"Attendance Percentage:\"\n        }), _jsx(CircularGraph, {\n          percentage: calculateAttendancePercentage(students1)\n        })]\n      })]\n    }), _jsxs(View, {\n      style: {\n        backgroundColor: '#fff'\n      },\n      children: [_jsx(Text, {\n        style: {\n          textAlign: 'center',\n          fontSize: 20,\n          fontWeight: 'bold',\n          marginVertical: 10\n        },\n        children: \"FA1-BSIT03-Sysdev01\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          padding: 10,\n          backgroundColor: '#eee'\n        },\n        children: [_jsx(View, {\n          style: {\n            flex: 2\n          },\n          children: _jsx(Text, {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: \"Name\"\n          })\n        }), _jsx(View, {\n          style: {\n            flex: 1\n          },\n          children: _jsx(Text, {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: \"ID Number\"\n          })\n        }), _jsx(View, {\n          style: {\n            flex: 1\n          },\n          children: _jsx(Text, {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: \"Attendance\"\n          })\n        })]\n      }), _jsx(FlatList, {\n        data: students2,\n        renderItem: function (_renderItem2) {\n          function renderItem(_x2) {\n            return _renderItem2.apply(this, arguments);\n          }\n          renderItem.toString = function () {\n            return _renderItem2.toString();\n          };\n          return renderItem;\n        }(function (_ref2) {\n          var item = _ref2.item,\n            index = _ref2.index;\n          return renderItem({\n            item: item,\n            index: index,\n            studentList: students2,\n            setStudentList: setStudents2\n          });\n        }),\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        }\n      }), _jsxs(View, {\n        style: {\n          alignItems: 'center'\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \"Attendance Percentage:\"\n        }), _jsx(CircularGraph, {\n          percentage: calculateAttendancePercentage(students2)\n        })]\n      })]\n    })]\n  });\n};\nexport default AttendanceScreen;","map":{"version":3,"names":["React","useState","View","Text","Button","FlatList","ScrollView","CircularGraph","jsx","_jsx","jsxs","_jsxs","AttendanceScreen","_useState","name","studentNumber","isPresent","_useState2","_slicedToArray","students1","setStudents1","_useState3","_useState4","students2","setStudents2","markAttendance","index","studentList","setStudentList","updatedStudents","_toConsumableArray","calculateAttendancePercentage","totalStudents","length","presentStudents","filter","student","style","flex","children","backgroundColor","textAlign","fontSize","fontWeight","marginVertical","flexDirection","justifyContent","alignItems","padding","data","renderItem","_renderItem","_x","apply","arguments","toString","_ref","item","keyExtractor","percentage","_renderItem2","_x2","_ref2"],"sources":["C:/Users/Asus/Desktop/web2-pattends/src/screens/AttendanceScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Button, FlatList, ScrollView } from 'react-native';\nimport CircularGraph from './CircularGraph'; // Import the CircularGraph component\n\nconst AttendanceScreen = () => {\n  const [students1, setStudents1] = useState([\n    { name: 'Student 1', studentNumber: '12345', isPresent: false },\n    { name: 'Student 2', studentNumber: '67890', isPresent: false },\n    { name: 'Student 3', studentNumber: '54321', isPresent: false },\n    { name: 'Student 4', studentNumber: '98765', isPresent: false },\n    { name: 'Student 5', studentNumber: '13579', isPresent: false },\n  ]);\n\n  const [students2, setStudents2] = useState([\n    { name: 'Another Student 1', studentNumber: '54321', isPresent: false },\n    { name: 'Another Student 2', studentNumber: '98765', isPresent: false },\n    { name: 'Another Student 3', studentNumber: '13579', isPresent: false },\n  ]);\n\n  const markAttendance = (index, studentList, setStudentList) => {\n    const updatedStudents = [...studentList];\n    updatedStudents[index].isPresent = !updatedStudents[index].isPresent;\n    setStudentList(updatedStudents);\n  };\n\n  // Function to calculate attendance percentage\n  const calculateAttendancePercentage = (studentList) => {\n    const totalStudents = studentList.length;\n    const presentStudents = studentList.filter((student) => student.isPresent).length;\n    return (presentStudents / totalStudents) * 100;\n  };\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      <View style={{ backgroundColor: '#fff' }}>\n        <Text style={{ textAlign: 'center', fontSize: 20, fontWeight: 'bold', marginVertical: 10 }}>FA1-BSIT03-WEBDEV2</Text>\n        <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', padding: 10, backgroundColor: '#eee' }}>\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: 'bold' }}>Name</Text>\n          </View>\n          <View style={{ flex: 1 }}>\n            <Text style={{ fontWeight: 'bold' }}>ID Number</Text>\n          </View>\n          <View style={{ flex: 1 }}>\n            <Text style={{ fontWeight: 'bold' }}>Attendance</Text>\n          </View>\n        </View>\n        <FlatList\n          data={students1}\n          renderItem={({ item, index }) => renderItem({ item, index, studentList: students1, setStudentList: setStudents1 })}\n          keyExtractor={(item, index) => index.toString()}\n        />\n        \n        {/* Display the circular graph with attendance percentage */}\n        <View style={{ alignItems: 'center' }}>\n          <Text style={{ fontWeight: 'bold' }}>Attendance Percentage:</Text>\n          <CircularGraph percentage={calculateAttendancePercentage(students1)} />\n        </View>\n      </View>\n\n      <View style={{ backgroundColor: '#fff' }}>\n        <Text style={{ textAlign: 'center', fontSize: 20, fontWeight: 'bold', marginVertical: 10 }}>FA1-BSIT03-Sysdev01</Text>\n        <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', padding: 10, backgroundColor: '#eee' }}>\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: 'bold' }}>Name</Text>\n          </View>\n          <View style={{ flex: 1 }}>\n            <Text style={{ fontWeight: 'bold' }}>ID Number</Text>\n          </View>\n          <View style={{ flex: 1 }}>\n            <Text style={{ fontWeight: 'bold' }}>Attendance</Text>\n          </View>\n        </View>\n        <FlatList\n          data={students2}\n          renderItem={({ item, index }) => renderItem({ item, index, studentList: students2, setStudentList: setStudents2 })}\n          keyExtractor={(item, index) => index.toString()}\n        />\n        \n        {/* Display the circular graph with attendance percentage */}\n        <View style={{ alignItems: 'center' }}>\n          <Text style={{ fontWeight: 'bold' }}>Attendance Percentage:</Text>\n          <CircularGraph percentage={calculateAttendancePercentage(students2)} />\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default AttendanceScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}