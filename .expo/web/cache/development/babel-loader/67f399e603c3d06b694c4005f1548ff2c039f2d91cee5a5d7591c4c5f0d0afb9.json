{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { LineChart } from 'react-native-chart-kit';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    report = _useState2[0],\n    setReport = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    reports = _useState4[0],\n    setReports = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    editIndex = _useState6[0],\n    setEditIndex = _useState6[1];\n  var _useState7 = useState([{\n      date: '09/01',\n      value: 75\n    }, {\n      date: '09/02',\n      value: 80\n    }, {\n      date: '09/03',\n      value: 85\n    }]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    attendanceData = _useState8[0],\n    setAttendanceData = _useState8[1];\n  var handleAddReport = function handleAddReport() {\n    if (report.trim() !== '') {\n      if (editIndex !== null) {\n        var updatedReports = _toConsumableArray(reports);\n        updatedReports[editIndex] = report;\n        setReports(updatedReports);\n        setEditIndex(null);\n      } else {\n        setReports([].concat(_toConsumableArray(reports), [report]));\n      }\n      setReport('');\n    }\n  };\n  var handleEditReport = function handleEditReport(index) {\n    setReport(reports[index]);\n    setEditIndex(index);\n  };\n  var handleDeleteReport = function handleDeleteReport(index) {\n    var updatedReports = _toConsumableArray(reports);\n    updatedReports.splice(index, 1);\n    setReports(updatedReports);\n  };\n  return _jsxs(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.circularShape,\n      children: _jsx(Text, {\n        style: styles.initials,\n        children: \"JD\"\n      })\n    }), _jsxs(View, {\n      style: styles.infoContainer,\n      children: [_jsx(Text, {\n        style: styles.name,\n        children: \"John Doe\"\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Teacher\"\n      }), _jsx(Text, {\n        style: styles.location,\n        children: \"Location: New York\"\n      }), _jsx(Text, {\n        style: styles.zip,\n        children: \"ZIP Code: 10001\"\n      }), _jsx(Text, {\n        style: styles.email,\n        children: \"john.doe@example.com\"\n      }), _jsx(Text, {\n        style: styles.phone,\n        children: \"Phone: +1 (123) 456-7890\"\n      })]\n    }), _jsxs(View, {\n      style: styles.reportContainer,\n      children: [_jsx(Text, {\n        style: styles.reportLabel,\n        children: \"Report:\"\n      }), _jsx(TextInput, {\n        style: styles.reportInput,\n        multiline: true,\n        placeholder: \"Write a report...\",\n        value: report,\n        onChangeText: function onChangeText(text) {\n          return setReport(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        style: styles.addButton,\n        onPress: handleAddReport,\n        children: _jsx(Text, {\n          style: styles.addButtonText,\n          children: editIndex !== null ? 'Update Report' : 'Add Report'\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.reportsContainer,\n      children: [_jsx(Text, {\n        style: styles.reportsLabel,\n        children: \"Reports:\"\n      }), reports.map(function (item, index) {\n        return _jsxs(View, {\n          style: styles.reportItem,\n          children: [_jsx(Text, {\n            style: styles.reportText,\n            children: item\n          }), _jsx(TouchableOpacity, {\n            style: styles.editButton,\n            onPress: function onPress() {\n              return handleEditReport(index);\n            },\n            children: _jsx(Text, {\n              style: styles.editButtonText,\n              children: \"Edit\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.deleteButton,\n            onPress: function onPress() {\n              return handleDeleteReport(index);\n            },\n            children: _jsx(Text, {\n              style: styles.deleteButtonText,\n              children: \"Delete\"\n            })\n          })]\n        }, index);\n      })]\n    }), _jsxs(View, {\n      style: styles.chartContainer,\n      children: [_jsx(Text, {\n        style: styles.chartLabel,\n        children: \"Attendance Chart:\"\n      }), _jsx(LineChart, {\n        data: {\n          labels: attendanceData.map(function (dataPoint) {\n            return dataPoint.date;\n          }),\n          datasets: [{\n            data: attendanceData.map(function (dataPoint) {\n              return dataPoint.value;\n            })\n          }]\n        },\n        width: Dimensions.get('window').width - 40,\n        height: 200,\n        yAxisSuffix: \"%\",\n        chartConfig: {\n          backgroundGradientFrom: 'white',\n          backgroundGradientTo: 'white',\n          decimalPlaces: 0,\n          color: function color() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return \"rgba(69, 138, 10, \" + opacity + \")\";\n          },\n          labelColor: function labelColor() {\n            return 'gray';\n          },\n          propsForDots: {\n            r: '6',\n            strokeWidth: '2'\n          }\n        },\n        style: {\n          marginTop: 20\n        }\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  chartContainer: {\n    alignSelf: 'stretch',\n    paddingHorizontal: 20,\n    marginTop: 20\n  },\n  chartLabel: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","ScrollView","TextInput","LineChart","Dimensions","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_useState","_useState2","_slicedToArray","report","setReport","_useState3","_useState4","reports","setReports","_useState5","_useState6","editIndex","setEditIndex","_useState7","date","value","_useState8","attendanceData","setAttendanceData","handleAddReport","trim","updatedReports","_toConsumableArray","concat","handleEditReport","index","handleDeleteReport","splice","contentContainerStyle","styles","container","children","style","circularShape","initials","infoContainer","name","label","location","zip","email","phone","reportContainer","reportLabel","reportInput","multiline","placeholder","onChangeText","text","addButton","onPress","addButtonText","reportsContainer","reportsLabel","map","item","reportItem","reportText","editButton","editButtonText","deleteButton","deleteButtonText","chartContainer","chartLabel","data","labels","dataPoint","datasets","width","get","height","yAxisSuffix","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","arguments","length","undefined","labelColor","propsForDots","r","strokeWidth","marginTop","create","alignSelf","paddingHorizontal","fontSize","fontWeight"],"sources":["C:/Users/Asus/Desktop/web2-pattends/src/screens/ProfileScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, ScrollView, TextInput } from 'react-native';\nimport { LineChart } from 'react-native-chart-kit';\nimport { Dimensions } from 'react-native';\n\nconst ProfileScreen = () => {\n  const [report, setReport] = useState('');\n  const [reports, setReports] = useState([]);\n  const [editIndex, setEditIndex] = useState(null);\n  const [attendanceData, setAttendanceData] = useState([\n    { date: '09/01', value: 75 },\n    { date: '09/02', value: 80 },\n    { date: '09/03', value: 85 },\n    // Add more data points as needed\n  ]);\n\n  const handleAddReport = () => {\n    if (report.trim() !== '') {\n      if (editIndex !== null) {\n        const updatedReports = [...reports];\n        updatedReports[editIndex] = report;\n        setReports(updatedReports);\n        setEditIndex(null);\n      } else {\n        setReports([...reports, report]);\n      }\n      setReport('');\n    }\n  };\n\n  const handleEditReport = (index) => {\n    setReport(reports[index]);\n    setEditIndex(index);\n  };\n\n  const handleDeleteReport = (index) => {\n    const updatedReports = [...reports];\n    updatedReports.splice(index, 1);\n    setReports(updatedReports);\n  };\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <TouchableOpacity style={styles.circularShape}>\n        <Text style={styles.initials}>JD</Text>\n      </TouchableOpacity>\n\n      <View style={styles.infoContainer}>\n        <Text style={styles.name}>John Doe</Text>\n        <Text style={styles.label}>Teacher</Text>\n        <Text style={styles.location}>Location: New York</Text>\n        <Text style={styles.zip}>ZIP Code: 10001</Text>\n        <Text style={styles.email}>john.doe@example.com</Text>\n        <Text style={styles.phone}>Phone: +1 (123) 456-7890</Text>\n      </View>\n\n      <View style={styles.reportContainer}>\n        <Text style={styles.reportLabel}>Report:</Text>\n        <TextInput\n          style={styles.reportInput}\n          multiline\n          placeholder=\"Write a report...\"\n          value={report}\n          onChangeText={(text) => setReport(text)}\n        />\n        <TouchableOpacity style={styles.addButton} onPress={handleAddReport}>\n          <Text style={styles.addButtonText}>\n            {editIndex !== null ? 'Update Report' : 'Add Report'}\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Display Reports */}\n      <View style={styles.reportsContainer}>\n        <Text style={styles.reportsLabel}>Reports:</Text>\n        {reports.map((item, index) => (\n          <View key={index} style={styles.reportItem}>\n            <Text style={styles.reportText}>{item}</Text>\n            <TouchableOpacity\n              style={styles.editButton}\n              onPress={() => handleEditReport(index)}\n            >\n              <Text style={styles.editButtonText}>Edit</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={styles.deleteButton}\n              onPress={() => handleDeleteReport(index)}\n            >\n              <Text style={styles.deleteButtonText}>Delete</Text>\n            </TouchableOpacity>\n          </View>\n        ))}\n      </View>\n\n      {/* Display Attendance Chart */}\n      <View style={styles.chartContainer}>\n        <Text style={styles.chartLabel}>Attendance Chart:</Text>\n        <LineChart\n          data={{\n            labels: attendanceData.map((dataPoint) => dataPoint.date),\n            datasets: [\n              {\n                data: attendanceData.map((dataPoint) => dataPoint.value),\n              },\n            ],\n          }}\n          width={Dimensions.get('window').width - 40} // Adjust width as needed\n          height={200}\n          yAxisSuffix=\"%\"\n          chartConfig={{\n            backgroundGradientFrom: 'white',\n            backgroundGradientTo: 'white',\n            decimalPlaces: 0,\n            color: (opacity = 1) => `rgba(69, 138, 10, ${opacity})`,\n            labelColor: () => 'gray',\n            propsForDots: {\n              r: '6',\n              strokeWidth: '2',\n            },\n          }}\n          style={{ marginTop: 20 }}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  // ...your existing styles...\n\n  chartContainer: {\n    alignSelf: 'stretch',\n    paddingHorizontal: 20,\n    marginTop: 20,\n  },\n  chartLabel: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n});\n\nexport default ProfileScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}