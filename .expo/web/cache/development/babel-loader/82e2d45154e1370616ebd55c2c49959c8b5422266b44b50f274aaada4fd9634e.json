{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      value: '',\n      error: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState({\n      value: '',\n      error: ''\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var onLoginPressed = function onLoginPressed() {\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n    if (emailError || passwordError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n    navigation.reset({\n      index: 0,\n      routes: [{\n        name: 'Dashboard'\n      }]\n    });\n  };\n  return _jsxs(Background, {\n    children: [_jsx(Logo, {}), _jsx(Header, {\n      children: \"Hello.\"\n    }), _jsx(TextInput, {\n      label: \"Email\",\n      returnKeyType: \"next\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      label: \"Password\",\n      returnKeyType: \"done\",\n      value: password.value,\n      onChangeText: function onChangeText(text) {\n        return setPassword({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!password.error,\n      errorText: password.error,\n      secureTextEntry: true\n    }), _jsx(View, {\n      style: styles.forgotPassword,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('ResetPasswordScreen');\n        },\n        children: _jsx(Text, {\n          style: styles.forgot,\n          children: \"Forgot your password ?\"\n        })\n      })\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: onLoginPressed,\n      children: \"Log in\"\n    }), _jsx(View, {\n      style: styles.row\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 10\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.primary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"names":["React","useState","TouchableOpacity","StyleSheet","View","Text","Background","Logo","Header","Button","TextInput","theme","emailValidator","passwordValidator","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","value","error","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","onLoginPressed","emailError","passwordError","_objectSpread","reset","index","routes","name","children","label","returnKeyType","onChangeText","text","errorText","autoCapitalize","autoCompleteType","textContentType","keyboardType","secureTextEntry","style","styles","forgotPassword","onPress","navigate","forgot","mode","row","create","width","alignItems","marginBottom","flexDirection","marginTop","fontSize","color","colors","primary","link","fontWeight"],"sources":["C:/Users/Asus/Desktop/web2-pattends/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport { theme } from '../core/theme'\nimport { emailValidator } from '../helpers/emailValidator'\nimport { passwordValidator } from '../helpers/passwordValidator'\n\nexport default function LoginScreen({ navigation }) {\n  const [email, setEmail] = useState({ value: '', error: '' })\n  const [password, setPassword] = useState({ value: '', error: '' })\n\n  const onLoginPressed = () => {\n    const emailError = emailValidator(email.value)\n    const passwordError = passwordValidator(password.value)\n    if (emailError || passwordError) {\n      setEmail({ ...email, error: emailError })\n      setPassword({ ...password, error: passwordError })\n      return\n    }\n    navigation.reset({\n      index: 0,\n      routes: [{ name: 'Dashboard' }],\n    })\n  }\n\n  return (\n    <Background>\n      {/* No BackButton component here */}\n      <Logo />\n      <Header>Hello.</Header>\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n      />\n      <View style={styles.forgotPassword}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate('ResetPasswordScreen')}\n        >\n          <Text style={styles.forgot}>Forgot your password ?</Text>\n        </TouchableOpacity>\n      </View>\n      <Button mode=\"contained\" onPress={onLoginPressed}>\n        Log in\n      </Button>\n      <View style={styles.row}>\n      </View>\n    </Background>\n  )\n}\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 10,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.primary,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}