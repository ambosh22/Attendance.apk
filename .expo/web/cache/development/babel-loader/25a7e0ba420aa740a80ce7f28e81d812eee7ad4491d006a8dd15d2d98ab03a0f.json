{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Svg, Circle } from 'react-native-svg';\nimport * as shape from 'd3-shape';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CircularGraph = function CircularGraph(_ref) {\n  var percentage = _ref.percentage;\n  var outerRadius = 50;\n  var innerRadius = 45;\n  var strokeWidth = 10;\n  var centerX = outerRadius + strokeWidth;\n  var centerY = outerRadius + strokeWidth;\n  var arc = shape.arc().outerRadius(outerRadius).innerRadius(innerRadius).startAngle(0).endAngle(percentage / 100 * (2 * Math.PI));\n  return _jsx(View, {\n    children: _jsxs(Svg, {\n      width: 2 * outerRadius + 2 * strokeWidth,\n      height: 2 * outerRadius + 2 * strokeWidth,\n      children: [_jsx(Circle, {\n        cx: centerX,\n        cy: centerY,\n        r: outerRadius,\n        fill: \"transparent\",\n        stroke: \"lightgray\",\n        strokeWidth: strokeWidth\n      }), _jsx(Circle, {\n        cx: centerX,\n        cy: centerY,\n        r: innerRadius,\n        fill: \"transparent\",\n        stroke: \"#458a0a\",\n        strokeWidth: strokeWidth,\n        strokeDasharray: arc.endAngle() * innerRadius + \" \" + 2 * Math.PI * innerRadius,\n        strokeDashoffset: 0\n      })]\n    })\n  });\n};\nexport default CircularGraph;","map":{"version":3,"names":["React","View","Svg","Circle","shape","jsx","_jsx","jsxs","_jsxs","CircularGraph","_ref","percentage","outerRadius","innerRadius","strokeWidth","centerX","centerY","arc","startAngle","endAngle","Math","PI","children","width","height","cx","cy","r","fill","stroke","strokeDasharray","strokeDashoffset"],"sources":["C:/Users/Asus/Desktop/web2-pattends/src/screens/CircularGraph.js"],"sourcesContent":["import React from 'react';\r\nimport { View } from 'react-native';\r\nimport { Svg, Circle } from 'react-native-svg';\r\nimport * as shape from 'd3-shape';\r\n\r\nconst CircularGraph = ({ percentage }) => {\r\n  const outerRadius = 50;\r\n  const innerRadius = 45;\r\n  const strokeWidth = 10;\r\n  const centerX = outerRadius + strokeWidth;\r\n  const centerY = outerRadius + strokeWidth;\r\n\r\n  // Calculate the arc based on the percentage\r\n  const arc = shape\r\n    .arc()\r\n    .outerRadius(outerRadius)\r\n    .innerRadius(innerRadius)\r\n    .startAngle(0)\r\n    .endAngle((percentage / 100) * (2 * Math.PI));\r\n\r\n  return (\r\n    <View>\r\n      <Svg width={2 * outerRadius + 2 * strokeWidth} height={2 * outerRadius + 2 * strokeWidth}>\r\n        <Circle\r\n          cx={centerX}\r\n          cy={centerY}\r\n          r={outerRadius}\r\n          fill=\"transparent\"\r\n          stroke=\"lightgray\"\r\n          strokeWidth={strokeWidth}\r\n        />\r\n        <Circle\r\n          cx={centerX}\r\n          cy={centerY}\r\n          r={innerRadius}\r\n          fill=\"transparent\"\r\n          stroke=\"#458a0a\" // Change the color as needed\r\n          strokeWidth={strokeWidth}\r\n          strokeDasharray={`${arc.endAngle() * innerRadius} ${2 * Math.PI * innerRadius}`}\r\n          strokeDashoffset={0}\r\n        />\r\n      </Svg>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CircularGraph;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAE1B,SAASC,GAAG,EAAEC,MAAM,QAAQ,kBAAkB;AAC9C,OAAO,KAAKC,KAAK,MAAM,UAAU;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElC,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACjC,IAAMC,WAAW,GAAG,EAAE;EACtB,IAAMC,WAAW,GAAG,EAAE;EACtB,IAAMC,WAAW,GAAG,EAAE;EACtB,IAAMC,OAAO,GAAGH,WAAW,GAAGE,WAAW;EACzC,IAAME,OAAO,GAAGJ,WAAW,GAAGE,WAAW;EAGzC,IAAMG,GAAG,GAAGb,KAAK,CACda,GAAG,CAAC,CAAC,CACLL,WAAW,CAACA,WAAW,CAAC,CACxBC,WAAW,CAACA,WAAW,CAAC,CACxBK,UAAU,CAAC,CAAC,CAAC,CACbC,QAAQ,CAAER,UAAU,GAAG,GAAG,IAAK,CAAC,GAAGS,IAAI,CAACC,EAAE,CAAC,CAAC;EAE/C,OACEf,IAAA,CAACL,IAAI;IAAAqB,QAAA,EACHd,KAAA,CAACN,GAAG;MAACqB,KAAK,EAAE,CAAC,GAAGX,WAAW,GAAG,CAAC,GAAGE,WAAY;MAACU,MAAM,EAAE,CAAC,GAAGZ,WAAW,GAAG,CAAC,GAAGE,WAAY;MAAAQ,QAAA,GACvFhB,IAAA,CAACH,MAAM;QACLsB,EAAE,EAAEV,OAAQ;QACZW,EAAE,EAAEV,OAAQ;QACZW,CAAC,EAAEf,WAAY;QACfgB,IAAI,EAAC,aAAa;QAClBC,MAAM,EAAC,WAAW;QAClBf,WAAW,EAAEA;MAAY,CAC1B,CAAC,EACFR,IAAA,CAACH,MAAM;QACLsB,EAAE,EAAEV,OAAQ;QACZW,EAAE,EAAEV,OAAQ;QACZW,CAAC,EAAEd,WAAY;QACfe,IAAI,EAAC,aAAa;QAClBC,MAAM,EAAC,SAAS;QAChBf,WAAW,EAAEA,WAAY;QACzBgB,eAAe,EAAKb,GAAG,CAACE,QAAQ,CAAC,CAAC,GAAGN,WAAW,SAAI,CAAC,GAAGO,IAAI,CAACC,EAAE,GAAGR,WAAc;QAChFkB,gBAAgB,EAAE;MAAE,CACrB,CAAC;IAAA,CACC;EAAC,CACF,CAAC;AAEX,CAAC;AAED,eAAetB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}