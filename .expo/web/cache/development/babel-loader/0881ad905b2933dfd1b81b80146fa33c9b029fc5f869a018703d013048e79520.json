{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { LineChart } from 'react-native-chart-kit';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AttendanceScreen = function AttendanceScreen() {\n  var _useState = useState([{\n      name: 'Student 1',\n      studentNumber: '12345',\n      isPresent: false\n    }, {\n      name: 'Student 2',\n      studentNumber: '67890',\n      isPresent: false\n    }, {\n      name: 'Student 3',\n      studentNumber: '54321',\n      isPresent: false\n    }, {\n      name: 'Student 4',\n      studentNumber: '98765',\n      isPresent: false\n    }, {\n      name: 'Student 5',\n      studentNumber: '13579',\n      isPresent: false\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    students1 = _useState2[0],\n    setStudents1 = _useState2[1];\n  var _useState3 = useState([{\n      name: 'Another Student 1',\n      studentNumber: '54321',\n      isPresent: false\n    }, {\n      name: 'Another Student 2',\n      studentNumber: '98765',\n      isPresent: false\n    }, {\n      name: 'Another Student 3',\n      studentNumber: '13579',\n      isPresent: false\n    }]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    students2 = _useState4[0],\n    setStudents2 = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    attendanceData = _useState6[0],\n    setAttendanceData = _useState6[1];\n  useEffect(function () {\n    var attendanceCounts = {\n      'FA1-BSIT03-WEBDEV2': 0,\n      'FA1-BSIT03-Sysdev01': 0\n    };\n    students1.forEach(function (student) {\n      if (student.isPresent) {\n        attendanceCounts['FA1-BSIT03-WEBDEV2'] += 1;\n      }\n    });\n    students2.forEach(function (student) {\n      if (student.isPresent) {\n        attendanceCounts['FA1-BSIT03-Sysdev01'] += 1;\n      }\n    });\n    var attendanceChartData = Object.entries(attendanceCounts).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        classCode = _ref2[0],\n        count = _ref2[1];\n      return {\n        classCode: classCode,\n        count: count\n      };\n    });\n    setAttendanceData(attendanceChartData);\n  }, [students1, students2]);\n  var markAttendance = function markAttendance(index, studentList, setStudentList) {\n    var updatedStudents = _toConsumableArray(studentList);\n    updatedStudents[index].isPresent = !updatedStudents[index].isPresent;\n    setStudentList(updatedStudents);\n  };\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item,\n      index = _ref3.index,\n      studentList = _ref3.studentList,\n      setStudentList = _ref3.setStudentList;\n    return _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: 10\n      },\n      children: [_jsx(View, {\n        style: {\n          flex: 2,\n          borderWidth: 1,\n          borderColor: '#ccc',\n          padding: 10\n        },\n        children: _jsx(Text, {\n          children: item.name\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 1,\n          borderWidth: 1,\n          borderColor: '#ccc',\n          padding: 10\n        },\n        children: _jsx(Text, {\n          children: item.studentNumber\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 1,\n          borderWidth: 1,\n          borderColor: '#ccc',\n          padding: 10\n        },\n        children: _jsx(Button, {\n          title: item.isPresent ? 'Present' : 'Absent',\n          onPress: function onPress() {\n            return markAttendance(index, studentList, setStudentList);\n          }\n        })\n      })]\n    });\n  };\n  return _jsx(ScrollView, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(View, {\n      style: {\n        marginVertical: 20\n      },\n      children: [_jsx(Text, {\n        style: {\n          textAlign: 'center',\n          fontSize: 20,\n          fontWeight: 'bold'\n        },\n        children: \"Attendance Chart\"\n      }), _jsx(LineChart, {\n        data: {\n          labels: attendanceData.map(function (dataPoint) {\n            return dataPoint.classCode;\n          }),\n          datasets: [{\n            data: attendanceData.map(function (dataPoint) {\n              return dataPoint.count;\n            })\n          }]\n        },\n        width: Dimensions.get('window').width - 40,\n        height: 200,\n        yAxisSuffix: \" Students\",\n        chartConfig: {\n          backgroundGradientFrom: 'white',\n          backgroundGradientTo: 'white',\n          decimalPlaces: 0,\n          color: function color() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return \"rgba(69, 138, 10, \" + opacity + \")\";\n          },\n          labelColor: function labelColor() {\n            return 'gray';\n          },\n          propsForDots: {\n            r: '6',\n            strokeWidth: '2'\n          }\n        }\n      })]\n    })\n  });\n};\nexport default AttendanceScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","FlatList","ScrollView","LineChart","Dimensions","jsx","_jsx","jsxs","_jsxs","AttendanceScreen","_useState","name","studentNumber","isPresent","_useState2","_slicedToArray","students1","setStudents1","_useState3","_useState4","students2","setStudents2","_useState5","_useState6","attendanceData","setAttendanceData","attendanceCounts","forEach","student","attendanceChartData","Object","entries","map","_ref","_ref2","classCode","count","markAttendance","index","studentList","setStudentList","updatedStudents","_toConsumableArray","renderItem","_ref3","item","style","flexDirection","justifyContent","alignItems","padding","children","flex","borderWidth","borderColor","title","onPress","marginVertical","textAlign","fontSize","fontWeight","data","labels","dataPoint","datasets","width","get","height","yAxisSuffix","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","arguments","length","undefined","labelColor","propsForDots","r","strokeWidth"],"sources":["C:/Users/Asus/Desktop/web2-pattends/src/screens/AttendanceScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Button, FlatList, ScrollView } from 'react-native';\nimport { LineChart } from 'react-native-chart-kit';\nimport { Dimensions } from 'react-native';\n\nconst AttendanceScreen = () => {\n  const [students1, setStudents1] = useState([\n    { name: 'Student 1', studentNumber: '12345', isPresent: false },\n    { name: 'Student 2', studentNumber: '67890', isPresent: false },\n    { name: 'Student 3', studentNumber: '54321', isPresent: false },\n    { name: 'Student 4', studentNumber: '98765', isPresent: false },\n    { name: 'Student 5', studentNumber: '13579', isPresent: false },\n  ]);\n\n  const [students2, setStudents2] = useState([\n    { name: 'Another Student 1', studentNumber: '54321', isPresent: false },\n    { name: 'Another Student 2', studentNumber: '98765', isPresent: false },\n    { name: 'Another Student 3', studentNumber: '13579', isPresent: false },\n  ]);\n\n  const [attendanceData, setAttendanceData] = useState([]);\n\n  useEffect(() => {\n    const attendanceCounts = {\n      'FA1-BSIT03-WEBDEV2': 0,\n      'FA1-BSIT03-Sysdev01': 0,\n    };\n\n    students1.forEach((student) => {\n      if (student.isPresent) {\n        attendanceCounts['FA1-BSIT03-WEBDEV2'] += 1;\n      }\n    });\n\n    students2.forEach((student) => {\n      if (student.isPresent) {\n        attendanceCounts['FA1-BSIT03-Sysdev01'] += 1;\n      }\n    });\n\n    // Convert attendanceCounts object to an array for chart data\n    const attendanceChartData = Object.entries(attendanceCounts).map(([classCode, count]) => ({\n      classCode,\n      count,\n    }));\n\n    setAttendanceData(attendanceChartData);\n  }, [students1, students2]);\n\n  const markAttendance = (index, studentList, setStudentList) => {\n    const updatedStudents = [...studentList];\n    updatedStudents[index].isPresent = !updatedStudents[index].isPresent;\n    setStudentList(updatedStudents);\n  };\n\n  const renderItem = ({ item, index, studentList, setStudentList }) => (\n    <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', padding: 10 }}>\n      <View style={{ flex: 2, borderWidth: 1, borderColor: '#ccc', padding: 10 }}>\n        <Text>{item.name}</Text>\n      </View>\n      <View style={{ flex: 1, borderWidth: 1, borderColor: '#ccc', padding: 10 }}>\n        <Text>{item.studentNumber}</Text>\n      </View>\n      <View style={{ flex: 1, borderWidth: 1, borderColor: '#ccc', padding: 10 }}>\n        <Button\n          title={item.isPresent ? 'Present' : 'Absent'}\n          onPress={() => markAttendance(index, studentList, setStudentList)}\n        />\n      </View>\n    </View>\n  );\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      {/* ...Existing code for student lists... */}\n      \n      {/* Display Attendance Chart */}\n      <View style={{ marginVertical: 20 }}>\n        <Text style={{ textAlign: 'center', fontSize: 20, fontWeight: 'bold' }}>Attendance Chart</Text>\n        <LineChart\n          data={{\n            labels: attendanceData.map((dataPoint) => dataPoint.classCode),\n            datasets: [\n              {\n                data: attendanceData.map((dataPoint) => dataPoint.count),\n              },\n            ],\n          }}\n          width={Dimensions.get('window').width - 40} // Adjust width as needed\n          height={200}\n          yAxisSuffix=\" Students\"\n          chartConfig={{\n            backgroundGradientFrom: 'white',\n            backgroundGradientTo: 'white',\n            decimalPlaces: 0,\n            color: (opacity = 1) => `rgba(69, 138, 10, ${opacity})`,\n            labelColor: () => 'gray',\n            propsForDots: {\n              r: '6',\n              strokeWidth: '2',\n            },\n          }}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default AttendanceScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}