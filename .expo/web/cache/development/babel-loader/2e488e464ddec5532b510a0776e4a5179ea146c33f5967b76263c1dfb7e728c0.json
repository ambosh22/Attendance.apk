{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { LineChart } from 'react-native-chart-kit';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    report = _useState2[0],\n    setReport = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    reports = _useState4[0],\n    setReports = _useState4[1];\n  var _useState5 = useState([50, 70, 80, 90, 75]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    attendanceData = _useState6[0],\n    setAttendanceData = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    editIndex = _useState8[0],\n    setEditIndex = _useState8[1];\n  var handleAddReport = function handleAddReport() {\n    if (report.trim() !== '') {\n      if (editIndex !== null) {\n        var updatedReports = _toConsumableArray(reports);\n        updatedReports[editIndex] = report;\n        setReports(updatedReports);\n        setEditIndex(null);\n      } else {\n        setReports([].concat(_toConsumableArray(reports), [report]));\n      }\n      setReport('');\n    }\n  };\n  var handleEditReport = function handleEditReport(index) {\n    setReport(reports[index]);\n    setEditIndex(index);\n  };\n  var handleDeleteReport = function handleDeleteReport(index) {\n    var updatedReports = _toConsumableArray(reports);\n    updatedReports.splice(index, 1);\n    setReports(updatedReports);\n  };\n  useEffect(function () {\n    var interval = setInterval(function () {\n      var newAttendanceValue = Math.floor(Math.random() * 100);\n      setAttendanceData([].concat(_toConsumableArray(attendanceData.slice(1)), [newAttendanceValue]));\n    }, 2000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [attendanceData]);\n  return _jsxs(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.circularShape,\n      children: _jsx(Text, {\n        style: styles.initials,\n        children: \"JD\"\n      })\n    }), _jsx(View, {\n      style: styles.infoContainer\n    }), _jsxs(View, {\n      style: styles.reportContainer,\n      children: [_jsx(Text, {\n        style: styles.reportLabel,\n        children: \"Report:\"\n      }), _jsx(TextInput, {\n        style: styles.reportInput,\n        multiline: true,\n        placeholder: \"Write a report...\",\n        value: report,\n        onChangeText: function onChangeText(text) {\n          return setReport(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        style: styles.addButton,\n        onPress: handleAddReport,\n        children: _jsx(Text, {\n          style: styles.addButtonText,\n          children: editIndex !== null ? 'Update Report' : 'Add Report'\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.reportsContainer,\n      children: [_jsx(Text, {\n        style: styles.reportsLabel,\n        children: \"Reports:\"\n      }), reports.map(function (item, index) {\n        return _jsxs(View, {\n          style: styles.reportItem,\n          children: [_jsx(Text, {\n            style: styles.reportText,\n            children: item\n          }), _jsx(TouchableOpacity, {\n            style: styles.editButton,\n            onPress: function onPress() {\n              return handleEditReport(index);\n            },\n            children: _jsx(Text, {\n              style: styles.editButtonText,\n              children: \"Edit\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.deleteButton,\n            onPress: function onPress() {\n              return handleDeleteReport(index);\n            },\n            children: _jsx(Text, {\n              style: styles.deleteButtonText,\n              children: \"Delete\"\n            })\n          })]\n        }, index);\n      })]\n    }), _jsxs(View, {\n      style: styles.attendanceGraphContainer,\n      children: [_jsx(Text, {\n        style: styles.attendanceLabel,\n        children: \"Attendance Over Time\"\n      }), _jsx(LineChart, {\n        data: {\n          labels: ['1', '2', '3', '4', '5'],\n          datasets: [{\n            data: attendanceData\n          }]\n        },\n        width: 300,\n        height: 200,\n        yAxisSuffix: \"%\",\n        chartConfig: {\n          backgroundColor: 'white',\n          backgroundGradientFrom: 'white',\n          backgroundGradientTo: 'white',\n          decimalPlaces: 0,\n          color: function color() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return \"rgba(69, 138, 10, \" + opacity + \")\";\n          },\n          labelColor: function labelColor() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return \"rgba(0, 0, 0, \" + opacity + \")\";\n          },\n          style: {\n            borderRadius: 16\n          },\n          propsForDots: {\n            r: '6',\n            strokeWidth: '2',\n            stroke: '#458a0a'\n          }\n        },\n        bezier: true\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  attendanceGraphContainer: {\n    alignItems: 'center',\n    marginTop: 20\n  },\n  attendanceLabel: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","StyleSheet","ScrollView","TextInput","LineChart","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_useState","_useState2","_slicedToArray","report","setReport","_useState3","_useState4","reports","setReports","_useState5","_useState6","attendanceData","setAttendanceData","_useState7","_useState8","editIndex","setEditIndex","handleAddReport","trim","updatedReports","_toConsumableArray","concat","handleEditReport","index","handleDeleteReport","splice","interval","setInterval","newAttendanceValue","Math","floor","random","slice","clearInterval","contentContainerStyle","styles","container","children","style","circularShape","initials","infoContainer","reportContainer","reportLabel","reportInput","multiline","placeholder","value","onChangeText","text","addButton","onPress","addButtonText","reportsContainer","reportsLabel","map","item","reportItem","reportText","editButton","editButtonText","deleteButton","deleteButtonText","attendanceGraphContainer","attendanceLabel","data","labels","datasets","width","height","yAxisSuffix","chartConfig","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","arguments","length","undefined","labelColor","borderRadius","propsForDots","r","strokeWidth","stroke","bezier","create","alignItems","marginTop","fontSize","fontWeight"],"sources":["C:/Users/Asus/Desktop/web2-pattends/src/screens/ProfileScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, ScrollView, TextInput } from 'react-native';\nimport { LineChart } from 'react-native-chart-kit'; // Import the LineChart component\n\nconst ProfileScreen = () => {\n  const [report, setReport] = useState('');\n  const [reports, setReports] = useState([]);\n  const [attendanceData, setAttendanceData] = useState([50, 70, 80, 90, 75]); // Example attendance data\n  const [editIndex, setEditIndex] = useState(null);\n\n  const handleAddReport = () => {\n    if (report.trim() !== '') {\n      if (editIndex !== null) {\n        const updatedReports = [...reports];\n        updatedReports[editIndex] = report;\n        setReports(updatedReports);\n        setEditIndex(null);\n      } else {\n        setReports([...reports, report]);\n      }\n\n      setReport('');\n    }\n  };\n\n  const handleEditReport = (index) => {\n    setReport(reports[index]);\n    setEditIndex(index);\n  };\n\n  const handleDeleteReport = (index) => {\n    const updatedReports = [...reports];\n    updatedReports.splice(index, 1);\n    setReports(updatedReports);\n  };\n\n  useEffect(() => {\n    // Simulate real-time attendance data update\n    const interval = setInterval(() => {\n      const newAttendanceValue = Math.floor(Math.random() * 100);\n      setAttendanceData([...attendanceData.slice(1), newAttendanceValue]);\n    }, 2000);\n\n    return () => clearInterval(interval);\n  }, [attendanceData]);\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <TouchableOpacity style={styles.circularShape}>\n        <Text style={styles.initials}>JD</Text>\n      </TouchableOpacity>\n\n      <View style={styles.infoContainer}>\n        {/* Your profile information */}\n      </View>\n\n      <View style={styles.reportContainer}>\n        <Text style={styles.reportLabel}>Report:</Text>\n        <TextInput\n          style={styles.reportInput}\n          multiline\n          placeholder=\"Write a report...\"\n          value={report}\n          onChangeText={(text) => setReport(text)}\n        />\n        <TouchableOpacity style={styles.addButton} onPress={handleAddReport}>\n          <Text style={styles.addButtonText}>\n            {editIndex !== null ? 'Update Report' : 'Add Report'}\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Display Reports */}\n      <View style={styles.reportsContainer}>\n        <Text style={styles.reportsLabel}>Reports:</Text>\n        {reports.map((item, index) => (\n          <View key={index} style={styles.reportItem}>\n            <Text style={styles.reportText}>{item}</Text>\n            <TouchableOpacity\n              style={styles.editButton}\n              onPress={() => handleEditReport(index)}\n            >\n              <Text style={styles.editButtonText}>Edit</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={styles.deleteButton}\n              onPress={() => handleDeleteReport(index)}\n            >\n              <Text style={styles.deleteButtonText}>Delete</Text>\n            </TouchableOpacity>\n          </View>\n        ))}\n      </View>\n\n      {/* Display the real-time attendance graph */}\n      <View style={styles.attendanceGraphContainer}>\n        <Text style={styles.attendanceLabel}>Attendance Over Time</Text>\n        <LineChart\n          data={{\n            labels: ['1', '2', '3', '4', '5'], // X-axis labels (e.g., days)\n            datasets: [\n              {\n                data: attendanceData, // Y-axis data (attendance percentages)\n              },\n            ],\n          }}\n          width={300}\n          height={200}\n          yAxisSuffix=\"%\"\n          chartConfig={{\n            backgroundColor: 'white',\n            backgroundGradientFrom: 'white',\n            backgroundGradientTo: 'white',\n            decimalPlaces: 0,\n            color: (opacity = 1) => `rgba(69, 138, 10, ${opacity})`, // Color of the line\n            labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`, // Color of X and Y axis labels\n            style: {\n              borderRadius: 16,\n            },\n            propsForDots: {\n              r: '6',\n              strokeWidth: '2',\n              stroke: '#458a0a', // Dot color\n            },\n          }}\n          bezier\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  // Your existing styles\n\n  attendanceGraphContainer: {\n    alignItems: 'center',\n    marginTop: 20,\n  },\n  attendanceLabel: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n});\n\nexport default ProfileScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}